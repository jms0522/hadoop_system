version: "3"

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - "9870:9870"  # Hadoop NameNode Web UI
      - "9000:9000"  # HDFS
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_spark_net

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode1
    restart: always
    ports:
      - "9864:9864"  # Hadoop DataNode Web UI
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_spark_net

  datanode2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode2
    restart: always
    ports:
      - "9865:9864"  # Hadoop DataNode Web UI (포트를 중복되지 않게 설정)
    volumes:
      - hadoop_datanode2:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_spark_net

  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode3
    restart: always
    ports:
      - "9866:9864"  # Hadoop DataNode Web UI (포트를 중복되지 않게 설정)
    volumes:
      - hadoop_datanode3:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_spark_net

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    ports:
      - "8088:8088"  # ResourceManager Web UI
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_spark_net

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    ports:
      - "8042:8042"  # NodeManager Web UI
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_spark_net

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    ports:
      - "8188:8188"  # HistoryServer Web UI
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode1:9864 datanode2:9864 datanode3:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
    networks:
      - hadoop_spark_net

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    ports:
      - "7077:7077"
      - "8087:8080"
    environment:
      - SPARK_MODE=master
    volumes:
      - /home/ubuntu/hadoop_system/hadoop/spark:/opt/bitnami/spark/python
    networks:
      - hadoop_spark_net

  spark-worker-1:
    image: bitnami/spark:latest
    container_name: spark-worker-1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - /home/ubuntu/hadoop_system/hadoop/spark:/opt/bitnami/spark/python
    networks:
      - hadoop_spark_net

  jupyterlab:
    image: jupyter/pyspark-notebook:latest
    user: root
    ports:
      - "9999:8888"
      - "4040:4040" 
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - GRANT_SUDO=yes
    volumes:
      - /home/ubuntu/hadoop_system/hadoop/work:/home/jovyan/work
      - /home/ubuntu/hadoop_system/hadoop/jupyter:/home/jovyan/.jupyter
    networks:
      - hadoop_spark_net

  logstash:
    user: root
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/config/pipeline.yml:/usr/share/logstash/config/pipelines.yml:ro,Z
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/:ro,Z
      - /var/lib/docker/containers:/var/lib/docker/containers:rw,Z
    environment:
      LS_JAVA_OPTS: "-Xms256m -Xmx512m"
    networks:
      - hadoop_spark_net

volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_datanode2:
  hadoop_datanode3:
  hadoop_historyserver:

networks:
  hadoop_spark_net:
    external: true
